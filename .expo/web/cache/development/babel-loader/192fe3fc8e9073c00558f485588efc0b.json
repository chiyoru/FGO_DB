{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport servant from \"../nice_servant.json\";\nimport Details from \"../pages/DetailsPerso\";\nimport styles from \"../styles/style-servant\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\n\nfunction ServArcher(_ref) {\n  var navigation = _ref.navigation;\n  var archer = servant.filter(function (name) {\n    return name.className === \"archer\";\n  });\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"auto\",\n      hidden: true,\n      backgroundColor: \"red\",\n      animated: true,\n      StatusBarStyle: \"light-content\"\n    }), _jsx(Image, {\n      style: styles.img,\n      source: require(\"../assets/Class-Archer-Gold.png\")\n    }), _jsx(FlatList, {\n      data: archer,\n      horizontal: true,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsxs(View, {\n          style: styles.viewChar,\n          children: [_jsxs(Text, {\n            style: styles.text,\n            children: [item.name, \"\\n\", _toConsumableArray(Array(item.rarity)).map(function (e, i) {\n              return _jsx(Text, {\n                style: styles.star,\n                children: \"\\u2605\"\n              }, i);\n            }), \"\\n\", _jsx(Text, {\n              style: styles.capitalize\n            })]\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return navigation.navigate(\"Details\", {\n                servant: item,\n                costume: item.filter(function (costume) {\n                  return costume.extraAssets.charaGraph.costume[item.id + 30];\n                })\n              });\n            },\n            children: _jsx(Image, {\n              style: styles.ascension,\n              source: {\n                uri: item.extraAssets.charaGraph.ascension[1]\n              }\n            })\n          })]\n        });\n      }\n    })]\n  });\n}\n\nexport default function App() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Archer\",\n    children: [_jsx(Stack.Screen, {\n      name: \"Archer\",\n      component: ServArcher,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Details\",\n      component: Details,\n      options: {\n        headerShown: false\n      },\n      options: {\n        headerShown: false\n      }\n    })]\n  });\n}","map":{"version":3,"sources":["C:/Users/HP/Downloads/Mod 3_4/React Native/FGO_DB/classes/archer.js"],"names":["StatusBar","NavigationContainer","React","useState","createNativeStackNavigator","servant","Details","styles","Stack","ServArcher","navigation","archer","filter","name","className","container","img","require","item","viewChar","text","Array","rarity","map","e","i","star","capitalize","navigate","costume","extraAssets","charaGraph","id","ascension","uri","App","headerShown"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TouchableOpacity,\r\n  Modal,\r\n  Alert,\r\n  Pressable,\r\n  ScrollView,\r\n  FlatList,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport servant from \"../nice_servant.json\";\r\nimport Details from \"../pages/DetailsPerso\";\r\nimport styles from \"../styles/style-servant\"\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nfunction ServArcher({navigation}) {\r\n  const archer = servant.filter((name) => name.className === \"archer\");\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <StatusBar\r\n        style=\"auto\"\r\n        hidden={true}\r\n        backgroundColor=\"red\"\r\n        animated={true}\r\n        StatusBarStyle=\"light-content\"\r\n      />\r\n\r\n      <Image\r\n        style={styles.img}\r\n        source={require(\"../assets/Class-Archer-Gold.png\")}\r\n      />\r\n\r\n      <FlatList\r\n        data={archer}\r\n        horizontal\r\n        renderItem={({ item }) => (\r\n          <View style={styles.viewChar}>\r\n            <Text style={styles.text}>\r\n              {item.name}{\"\\n\"}\r\n              {[...Array(item.rarity)].map((e, i) => (\r\n                <Text key={i} style={styles.star}>â˜…</Text>\r\n              ))}\r\n              {\"\\n\"}\r\n              <Text style={styles.capitalize}></Text>\r\n            </Text>\r\n            <TouchableOpacity onPress={() => navigation.navigate(\"Details\", {servant: item, costume: item.filter(costume => costume.extraAssets.charaGraph.costume[item.id + 30])})}>\r\n              <Image\r\n                style={styles.ascension}\r\n                source={{ uri: item.extraAssets.charaGraph.ascension[1] }}\r\n              />\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}\r\n      />\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nexport default function App(){\r\n  return(\r\n    <Stack.Navigator initialRouteName=\"Archer\">\r\n      <Stack.Screen name=\"Archer\" component={ServArcher} options={{ headerShown: false }} />\r\n      <Stack.Screen name=\"Details\" component={Details} options={{ headerShown: false }}  options={{headerShown: false}} />\r\n    </Stack.Navigator>\r\n )\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}