{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function Mats(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      mats = _useState2[0],\n      setMats = _useState2[1];\n\n  var getMats = function getMats() {\n    var response, json;\n    return _regeneratorRuntime.async(function getMats$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('https://api.atlasacademy.io/export/NA/nice_item.json'));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            setMats(json.filter(function (filtre) {\n              return filtre.name.length < 10;\n            }));\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  useEffect(function () {\n    getMats();\n  }, []);\n  return _jsx(ScrollView, {\n    style: styles.container,\n    horizontal: true,\n    children: _jsx(FlatList, {\n      data: mats,\n      numColumns: 2,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(View, {\n          style: styles.containerItem,\n          children: _jsx(Text, {\n            style: styles.text,\n            children: item.name\n          })\n        });\n      }\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#1C2833'\n  },\n  containerItem: {\n    backgroundColor: \"white\",\n    margin: 5,\n    width: 150\n  },\n  text: {\n    color: 'black',\n    fontSize: 15,\n    margin: 25,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["C:/Users/HP/Downloads/Mod 3_4/React Native/FGO_DB/pages/MatÃ©riaux.js"],"names":["React","useState","useEffect","createBottomTabNavigator","ScrollView","Tab","Mats","navigation","mats","setMats","getMats","fetch","response","json","filter","filtre","name","length","console","error","styles","container","item","containerItem","text","StyleSheet","create","flex","backgroundColor","margin","width","color","fontSize","fontWeight"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;AAGA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,UAAT,QAA2B,8BAA3B;;AAKA,IAAMC,GAAG,GAAGF,wBAAwB,EAApC;AAEA,eAAe,SAASG,IAAT,OAA2B;AAAA,MAAZC,UAAY,QAAZA,UAAY;;AACxC,kBAAwBN,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOO,IAAP;AAAA,MAAaC,OAAb;;AAEE,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEWC,KAAK,CAAC,sDAAD,CAFhB;;AAAA;AAENC,YAAAA,QAFM;AAAA;AAAA,6CAGOA,QAAQ,CAACC,IAAT,EAHP;;AAAA;AAGNA,YAAAA,IAHM;AAIZJ,YAAAA,OAAO,CAACI,IAAI,CAACC,MAAL,CAAY,UAACC,MAAD;AAAA,qBAAYA,MAAM,CAACC,IAAP,CAAYC,MAAZ,GAAqB,EAAjC;AAAA,aAAZ,CAAD,CAAP;AAJY;AAAA;;AAAA;AAAA;AAAA;AAMZC,YAAAA,OAAO,CAACC,KAAR;;AANY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAUAjB,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,KAAC,UAAD;AAAY,IAAA,KAAK,EAAEU,MAAM,CAACC,SAA1B;AAAqC,IAAA,UAAU,MAA/C;AAAA,cAEE,KAAC,QAAD;AACA,MAAA,IAAI,EAAEb,IADN;AAEA,MAAA,UAAU,EAAE,CAFZ;AAGA,MAAA,UAAU,EAAE;AAAA,YAAGc,IAAH,SAAGA,IAAH;AAAA,eACV,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEF,MAAM,CAACG,aAApB;AAAA,oBACE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEH,MAAM,CAACI,IAApB;AAAA,sBAA2BF,IAAI,CAACN;AAAhC;AADF,UADU;AAAA;AAHZ;AAFF,IADF;AAcH;AAED,IAAMI,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE;AAFR,GADoB;AAK/BL,EAAAA,aAAa,EAAC;AACZK,IAAAA,eAAe,EAAC,OADJ;AAEZC,IAAAA,MAAM,EAAE,CAFI;AAGZC,IAAAA,KAAK,EAAE;AAHK,GALiB;AAU/BN,EAAAA,IAAI,EAAC;AACHO,IAAAA,KAAK,EAAC,OADH;AAEHC,IAAAA,QAAQ,EAAC,EAFN;AAGHH,IAAAA,MAAM,EAAC,EAHJ;AAIHI,IAAAA,UAAU,EAAC;AAJR;AAV0B,CAAlB,CAAf","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport { StyleSheet, Image, Text, View, SafeAreaView, FlatList } from 'react-native';\n// import { NavigationContainer, DefaultTheme } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { ScrollView } from \"react-native-gesture-handler\";\n\n\n// import { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function Mats({navigation}){\n  const [mats, setMats] = useState([]);\n  \n    const getMats = async () => {\n       try {\n        const response = await fetch('https://api.atlasacademy.io/export/NA/nice_item.json');\n        const json = await response.json();\n        setMats(json.filter((filtre) => filtre.name.length < 10 ) );\n      } catch (error) {\n        console.error(error);\n      } \n    }\n  \n    useEffect(() => {\n      getMats();\n    }, []);\n  \n    return (\n      <ScrollView style={styles.container} horizontal>\n        \n        <FlatList\n        data={mats}\n        numColumns={2}\n        renderItem={({ item }) => (\n          <View style={styles.containerItem}>\n            <Text style={styles.text}>{item.name}</Text>\n          </View>\n        )}/>\n        \n      </ScrollView>\n    )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#1C2833',\n  },\n  containerItem:{\n    backgroundColor:\"white\",\n    margin: 5,\n    width: 150\n  },\n  text:{\n    color:'black',\n    fontSize:15,\n    margin:25,\n    fontWeight:'bold',\n  }\n});\n"]},"metadata":{},"sourceType":"module"}