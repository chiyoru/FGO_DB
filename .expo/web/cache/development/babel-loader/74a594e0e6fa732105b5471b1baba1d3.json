{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function Mats(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      mats10 = _useState2[0],\n      setMats10 = _useState2[1];\n\n  var getMats10 = function getMats10() {\n    var response, json;\n    return _regeneratorRuntime.async(function getMats10$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('https://api.atlasacademy.io/export/NA/nice_item.json'));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            setMats10(json.filter(function (filtre) {\n              return filtre.name.length < 10;\n            }));\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  useEffect(function () {\n    getMats10();\n  }, []);\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mats20 = _useState4[0],\n      setMats20 = _useState4[1];\n\n  var getMats20 = function getMats20() {\n    var response, json;\n    return _regeneratorRuntime.async(function getMats20$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch('https://api.atlasacademy.io/export/NA/nice_item.json'));\n\n          case 3:\n            response = _context2.sent;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context2.sent;\n            setMats20(json.filter(function (filtre) {\n              return filtre.name.length < 20 && filtre.name.length > 10;\n            }));\n            _context2.next = 13;\n            break;\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error(_context2.t0);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  useEffect(function () {\n    getMats20();\n  }, []);\n  return _jsx(ScrollView, {\n    contentContainerStyle: styles.container,\n    horizontal: true,\n    children: _jsxs(View, {\n      style: styles.view,\n      children: [_jsx(FlatList, {\n        data: mats10,\n        numColumns: 2,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return _jsxs(View, {\n            style: styles.containerItem,\n            children: [_jsx(Text, {\n              style: styles.text,\n              children: item.name\n            }), _jsx(Image, {\n              style: styles.img,\n              source: {\n                uri: item.icon\n              }\n            })]\n          });\n        }\n      }), _jsx(FlatList, {\n        data: mats20,\n        numColumns: 2,\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item;\n          return _jsxs(View, {\n            style: styles.containerItem,\n            children: [_jsx(Text, {\n              style: styles.text,\n              children: item.name\n            }), _jsx(Image, {\n              style: styles.img,\n              source: {\n                uri: item.icon\n              }\n            })]\n          });\n        }\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#1C2833',\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  containerItem: {\n    backgroundColor: \"rgba(8, 124, 167, 0.3)\",\n    margin: 5,\n    width: 150,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderColor: \"white\",\n    borderRadius: 20,\n    borderLeftWidth: 1,\n    borderRightWidth: 1\n  },\n  view: {\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  text: {\n    color: 'white',\n    fontSize: 15,\n    margin: 25,\n    fontWeight: 'bold'\n  },\n  img: {\n    width: 64,\n    height: 64,\n    marginBottom: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/HP/Downloads/Mod 3_4/React Native/FGO_DB/pages/MatÃ©riaux.js"],"names":["React","useState","useEffect","createBottomTabNavigator","ScrollView","Tab","Mats","navigation","mats10","setMats10","getMats10","fetch","response","json","filter","filtre","name","length","console","error","mats20","setMats20","getMats20","styles","container","view","item","containerItem","text","img","uri","icon","StyleSheet","create","flex","backgroundColor","justifyContent","alignItems","margin","width","borderColor","borderRadius","borderLeftWidth","borderRightWidth","color","fontSize","fontWeight","height","marginBottom"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport { StyleSheet, Image, Text, View, SafeAreaView, FlatList } from 'react-native';\n// import { NavigationContainer, DefaultTheme } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { ScrollView } from \"react-native-gesture-handler\";\n\n\n// import { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function Mats({navigation}){\n  const [mats10, setMats10] = useState([]);\n  \n    const getMats10 = async () => {\n       try {\n        const response = await fetch('https://api.atlasacademy.io/export/NA/nice_item.json');\n        const json = await response.json();\n        setMats10(json.filter((filtre) => filtre.name.length < 10 ) );\n      } catch (error) {\n        console.error(error);\n      } \n    }\n  \n    useEffect(() => {\n      getMats10();\n    }, []);\n\n    const [mats20, setMats20] = useState([]);\n  \n    const getMats20 = async () => {\n       try {\n        const response = await fetch('https://api.atlasacademy.io/export/NA/nice_item.json');\n        const json = await response.json();\n        setMats20(json.filter((filtre) => filtre.name.length < 20 && filtre.name.length > 10 ) );\n      } catch (error) {\n        console.error(error);\n      } \n    }\n  \n    useEffect(() => {\n      getMats20();\n    }, []);\n  \n    return (\n      <ScrollView contentContainerStyle={styles.container} horizontal>\n        <View style={styles.view}>\n          <FlatList\n          data={mats10}\n          numColumns={2}\n          renderItem={({ item }) => (\n            <View style={styles.containerItem}>\n              <Text style={styles.text}>{item.name}</Text>\n              <Image style={styles.img} source={{ uri: item.icon}}\n                />\n            </View>\n          )}/>\n\n          <FlatList\n          data={mats20}\n          numColumns={2}\n          renderItem={({ item }) => (\n            <View style={styles.containerItem}>\n              <Text style={styles.text}>{item.name}</Text>\n              <Image style={styles.img} source={{ uri: item.icon}}\n                />\n            </View>\n          )}/>\n        </View>\n      </ScrollView>\n    )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#1C2833',\n    justifyContent:\"center\",\n    alignItems:\"center\",\n  },\n  containerItem:{\n    backgroundColor:\"rgba(8, 124, 167, 0.3)\",  \n    margin: 5,\n    width: 150,\n    alignItems:\"center\",\n    justifyContent:\"center\",\n    borderColor: \"white\",\n    borderRadius: 20,\n    borderLeftWidth: 1,\n    borderRightWidth: 1\n  },\n  view:{\n    justifyContent:\"center\",\n    alignItems:\"center\"\n  },\n  text:{\n    color:'white',\n    fontSize:15,\n    margin:25,\n    fontWeight:'bold',\n  },\n  img:{\n    width: 64,\n    height: 64,\n    marginBottom: 10\n  }\n});\n"]},"metadata":{},"sourceType":"module"}