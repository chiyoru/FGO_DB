{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Details from \"../pages/DetailsPerso\";\nimport styles from \"../styles/style-servant\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    servant = _useState2[0],\n    setData = _useState2[1];\n\nvar getMovies = function getMovies() {\n  var response, json;\n  return _regeneratorRuntime.async(function getMovies$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch('https://api.atlasacademy.io/export/NA/nice_servant.json'));\n\n        case 3:\n          response = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 6:\n          json = _context.sent;\n          setData(json.movies);\n          _context.next = 13;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n\n        case 13:\n          useEffect(function () {\n            getMovies();\n          }, []);\n          return _context.abrupt(\"return\", _jsxs(SafeAreaView, {\n            style: styles.container,\n            children: [_jsx(StatusBar, {\n              style: \"auto\",\n              hidden: true,\n              backgroundColor: \"red\",\n              animated: true,\n              StatusBarStyle: \"light-content\"\n            }), _jsx(Image, {\n              style: styles.img,\n              source: require(\"../assets/Class-Archer-Gold.png\")\n            }), _jsx(FlatList, {\n              data: servant,\n              horizontal: true,\n              renderItem: function renderItem(_ref) {\n                var item = _ref.item;\n                return _jsxs(View, {\n                  style: styles.viewChar,\n                  children: [_jsxs(Text, {\n                    style: styles.text,\n                    children: [item.name, \"\\n\", _toConsumableArray(Array(item.rarity)).map(function (e, i) {\n                      return _jsx(Text, {\n                        style: styles.star,\n                        children: \"\\u2605\"\n                      }, i);\n                    }), \"\\n\", _jsx(Text, {\n                      style: styles.capitalize\n                    })]\n                  }), _jsx(TouchableOpacity, {\n                    onPress: function onPress() {\n                      return navigation.navigate(\"Details\", {\n                        servant: item,\n                        costume1: item.extraAssets.charaGraph\n                      });\n                    },\n                    children: _jsx(Image, {\n                      style: styles.ascension,\n                      source: {\n                        uri: item.extraAssets.charaGraph.ascension[1]\n                      }\n                    })\n                  })]\n                });\n              }\n            })]\n          }));\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 10]], Promise);\n};\n\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Archer\",\n    children: [_jsx(Stack.Screen, {\n      name: \"Archer\",\n      component: getMovies,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Details\",\n      component: Details,\n      options: {\n        headerShown: false\n      },\n      options: {\n        headerShown: false\n      }\n    })]\n  });\n}","map":{"version":3,"sources":["C:/Users/HP/Downloads/Mod 3_4/React Native/FGO_DB/classes/archer.js"],"names":["StatusBar","NavigationContainer","React","useState","createNativeStackNavigator","Details","styles","servant","setData","getMovies","fetch","response","json","movies","console","error","useEffect","container","img","require","item","viewChar","text","name","Array","rarity","map","e","i","star","capitalize","navigation","navigate","costume1","extraAssets","charaGraph","ascension","uri","Stack","App","headerShown"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TouchableOpacity,\r\n  Modal,\r\n  Alert,\r\n  Pressable,\r\n  ScrollView,\r\n  FlatList,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\n// import servant from \"../nice_servant.json\";\r\nimport Details from \"../pages/DetailsPerso\";\r\nimport styles from \"../styles/style-servant\"\r\n\r\nconst [servant, setData] = useState([]);\r\n\r\nconst getMovies = async () => {\r\n  try {\r\n   const response = await fetch('https://api.atlasacademy.io/export/NA/nice_servant.json');\r\n   const json = await response.json();\r\n   setData(json.movies);\r\n } catch (error) {\r\n   console.error(error);\r\n }\r\n\r\n\r\nuseEffect(() => {\r\n getMovies();\r\n}, []);\r\n\r\nreturn (\r\n  <SafeAreaView style={styles.container}>\r\n    <StatusBar\r\n      style=\"auto\"\r\n      hidden={true}\r\n      backgroundColor=\"red\"\r\n      animated={true}\r\n      StatusBarStyle=\"light-content\"\r\n    />\r\n\r\n    <Image\r\n      style={styles.img}\r\n      source={require(\"../assets/Class-Archer-Gold.png\")}\r\n    />\r\n\r\n    <FlatList\r\n      data={servant}\r\n      horizontal\r\n      renderItem={({ item }) => (\r\n        <View style={styles.viewChar}>\r\n          <Text style={styles.text}>\r\n            {item.name}{\"\\n\"}\r\n            {[...Array(item.rarity)].map((e, i) => (\r\n              <Text key={i} style={styles.star}>â˜…</Text>\r\n            ))}\r\n            {\"\\n\"}\r\n            <Text style={styles.capitalize}></Text>\r\n          </Text>\r\n          <TouchableOpacity onPress={() => navigation.navigate(\"Details\", {servant: item, costume1: item.extraAssets.charaGraph})}>\r\n            <Image\r\n              style={styles.ascension}\r\n              source={{ uri: item.extraAssets.charaGraph.ascension[1] }}\r\n            />\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n    />\r\n  </SafeAreaView>\r\n);}\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\n// function ServArcher({navigation}) {\r\n//   const archer = servant.filter((name) => name.className === \"archer\");\r\n\r\n//   return (\r\n//     <SafeAreaView style={styles.container}>\r\n//       <StatusBar\r\n//         style=\"auto\"\r\n//         hidden={true}\r\n//         backgroundColor=\"red\"\r\n//         animated={true}\r\n//         StatusBarStyle=\"light-content\"\r\n//       />\r\n\r\n//       <Image\r\n//         style={styles.img}\r\n//         source={require(\"../assets/Class-Archer-Gold.png\")}\r\n//       />\r\n\r\n//       <FlatList\r\n//         data={archer}\r\n//         horizontal\r\n//         renderItem={({ item }) => (\r\n//           <View style={styles.viewChar}>\r\n//             <Text style={styles.text}>\r\n//               {item.name}{\"\\n\"}\r\n//               {[...Array(item.rarity)].map((e, i) => (\r\n//                 <Text key={i} style={styles.star}>â˜…</Text>\r\n//               ))}\r\n//               {\"\\n\"}\r\n//               <Text style={styles.capitalize}></Text>\r\n//             </Text>\r\n//             <TouchableOpacity onPress={() => navigation.navigate(\"Details\", {servant: item, costume1: item.extraAssets.charaGraph})}>\r\n//               <Image\r\n//                 style={styles.ascension}\r\n//                 source={{ uri: item.extraAssets.charaGraph.ascension[1] }}\r\n//               />\r\n//             </TouchableOpacity>\r\n//           </View>\r\n//         )}\r\n//       />\r\n//     </SafeAreaView>\r\n//   );\r\n// }\r\n\r\nexport default function App(){\r\n  return(\r\n    <Stack.Navigator initialRouteName=\"Archer\">\r\n      <Stack.Screen name=\"Archer\" component={getMovies} options={{ headerShown: false }} />\r\n      <Stack.Screen name=\"Details\" component={Details} options={{ headerShown: false }}  options={{headerShown: false}} />\r\n    </Stack.Navigator>\r\n )\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}