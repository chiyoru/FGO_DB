{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport styles from \"../styles/style-ce-details\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function DetailsCE(_ref) {\n  var route = _ref.route;\n  var CE = route.params.CE;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      servCE = _useState2[0],\n      setServCE = _useState2[1];\n\n  var getServCE = function getServCE() {\n    var response, json;\n    return _regeneratorRuntime.async(function getServCE$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('https://api.atlasacademy.io/export/NA/nice_servant.json'));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            setServCE(json.filter(function (serv) {\n              return serv.id === CE.bondEquipOwner;\n            }));\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  useEffect(function () {\n    getServCE();\n  }, []);\n  return _jsxs(ScrollView, {\n    contentContainerStyle: styles.container,\n    children: [_jsx(Text, {\n      style: styles.titre,\n      children: CE.name\n    }), _jsx(Image, {\n      style: styles.img,\n      source: {\n        uri: CE.extraAssets.charaGraph.equip[CE.id]\n      }\n    }), _jsxs(View, {\n      style: styles.containerInfos,\n      children: [_jsx(View, {\n        style: styles.infos,\n        children: _jsxs(Text, {\n          style: styles.cost,\n          children: [\"Cost: \", CE.cost, \", Lv. max \", CE.lvMax]\n        })\n      }), _jsx(View, {\n        style: styles.infos,\n        children: _jsx(Text, {\n          style: styles.text,\n          children: CE.skills[0].detail\n        })\n      })]\n    })]\n  });\n}","map":{"version":3,"sources":["C:/Users/HP/Downloads/Mod 3_4/React Native/FGO_DB/pages/DetailsCE.js"],"names":["styles","DetailsCE","route","CE","params","useState","servCE","setServCE","getServCE","fetch","response","json","filter","serv","id","bondEquipOwner","console","error","useEffect","container","titre","name","img","uri","extraAssets","charaGraph","equip","containerInfos","infos","cost","lvMax","text","skills","detail"],"mappings":";;;;;;AAEA,OAAOA,MAAP;;;AAEA,eAAe,SAASC,SAAT,OAA2B;AAAA,MAAPC,KAAO,QAAPA,KAAO;AACtC,MAAOC,EAAP,GAAaD,KAAK,CAACE,MAAnB,CAAOD,EAAP;;AAEA,kBAA4BE,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAeC,SAAf;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAESC,KAAK,CAAC,yDAAD,CAFd;;AAAA;AAERC,YAAAA,QAFQ;AAAA;AAAA,6CAGKA,QAAQ,CAACC,IAAT,EAHL;;AAAA;AAGRA,YAAAA,IAHQ;AAIdJ,YAAAA,SAAS,CAACI,IAAI,CAACC,MAAL,CAAY,UAACC,IAAD;AAAA,qBAASA,IAAI,CAACC,EAAL,KAAYX,EAAE,CAACY,cAAxB;AAAA,aAAZ,CAAD,CAAT;AAJc;AAAA;;AAAA;AAAA;AAAA;AAMdC,YAAAA,OAAO,CAACC,KAAR;;AANc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAUAC,EAAAA,SAAS,CAAC,YAAM;AACdV,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAGA,SACI,MAAC,UAAD;AAAY,IAAA,qBAAqB,EAAER,MAAM,CAACmB,SAA1C;AAAA,eACI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEnB,MAAM,CAACoB,KAApB;AAAA,gBACKjB,EAAE,CAACkB;AADR,MADJ,EAII,KAAC,KAAD;AAAO,MAAA,KAAK,EAAErB,MAAM,CAACsB,GAArB;AAA0B,MAAA,MAAM,EAAE;AAACC,QAAAA,GAAG,EAAGpB,EAAE,CAACqB,WAAH,CAAeC,UAAf,CAA0BC,KAA1B,CAAgCvB,EAAE,CAACW,EAAnC;AAAP;AAAlC,MAJJ,EAMI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEd,MAAM,CAAC2B,cAApB;AAAA,iBACI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE3B,MAAM,CAAC4B,KAApB;AAAA,kBACI,MAAC,IAAD;AAAM,UAAA,KAAK,EAAE5B,MAAM,CAAC6B,IAApB;AAAA,+BAAiC1B,EAAE,CAAC0B,IAApC,gBAAoD1B,EAAE,CAAC2B,KAAvD;AAAA;AADJ,QADJ,EAII,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE9B,MAAM,CAAC4B,KAApB;AAAA,kBACI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE5B,MAAM,CAAC+B,IAApB;AAAA,oBAA2B5B,EAAE,CAAC6B,MAAH,CAAU,CAAV,EAAaC;AAAxC;AADJ,QAJJ;AAAA,MANJ;AAAA,IADJ;AAiBH","sourcesContent":["\r\nimport {  Image, Text, View, ScrollView} from 'react-native';\r\nimport styles from \"../styles/style-ce-details\"\r\n\r\nexport default function DetailsCE({route}){\r\n    const {CE} = route.params;\r\n    \r\n    const [servCE, setServCE] = useState([]);\r\n  \r\n    const getServCE = async () => {\r\n       try {\r\n        const response = await fetch('https://api.atlasacademy.io/export/NA/nice_servant.json');\r\n        const json = await response.json();\r\n        setServCE(json.filter((serv) =>serv.id === CE.bondEquipOwner));\r\n      } catch (error) {\r\n        console.error(error);\r\n      } \r\n    }\r\n  \r\n    useEffect(() => {\r\n      getServCE();\r\n    }, []);\r\n    return(\r\n        <ScrollView contentContainerStyle={styles.container}>\r\n            <Text style={styles.titre}>\r\n                {CE.name}\r\n            </Text>\r\n            <Image style={styles.img} source={{uri : CE.extraAssets.charaGraph.equip[CE.id]}}/>\r\n\r\n            <View style={styles.containerInfos}>\r\n                <View style={styles.infos}>\r\n                    <Text style={styles.cost}>Cost: {CE.cost}, Lv. max {CE.lvMax}</Text>\r\n                </View>\r\n                <View style={styles.infos}>\r\n                    <Text style={styles.text}>{CE.skills[0].detail}</Text>\r\n                </View>\r\n            </View>\r\n        </ScrollView>  \r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}